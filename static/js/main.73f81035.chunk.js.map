{"version":3,"sources":["components/Card.js","components/NavBar.js","components/Wrapper.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","data-id","id","onClick","src","alt","NavBar","score","highScore","Wrapper","children","App","state","images","clickedImages","checkClicked","_this","includes","newImageArr","push","setState","randomizeImages","console","log","imageArray","randomizedImages","_loop","i","randy","Math","floor","random","length","filter","image","_this2","this","components_Wrapper","components_NavBar","map","components_Card","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"44CAQeA,EANF,SAACC,GAAD,OACTC,EAAAC,EAAAC,cAAA,UAAQC,UAAY,cAAcC,UAASL,EAAMM,GAAIC,QAAS,kBAAMP,EAAMO,QAAQP,EAAMM,MACpFL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOI,IAAKR,EAAMQ,IAAKC,IAAKT,EAAMM,cCiB1CI,EAnBA,SAACV,GAAD,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,2BAGRH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAhB,UAA8CJ,EAAMW,QAExDV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAhB,eAAmDJ,EAAMY,eCV1DC,EAFC,SAAAb,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,WC+D1CC,oNAzDXC,MAAQ,CACJC,SACAC,cAAe,GACfP,MAAO,EACPC,UAAW,KAGfO,aAAe,SAACb,GACZ,IAA6C,IAA1Cc,EAAKJ,MAAME,cAAcG,SAASf,GAAc,CAC/C,IAAIgB,EAAcF,EAAKJ,MAAME,cAC7BI,EAAYC,KAAKjB,GACjBc,EAAKI,SAAS,CACVN,cAAeI,EACfX,MAAOS,EAAKJ,MAAML,MAAQ,GAC3B,WACIS,EAAKJ,MAAML,MAAQS,EAAKJ,MAAMJ,WAC7BQ,EAAKI,SAAS,CAACZ,UAAWQ,EAAKJ,MAAML,UAG7CS,EAAKK,uBAELL,EAAKI,SAAS,CAACN,cAAe,GAAID,OAAQA,EAAQN,MAAO,IACzDe,QAAQC,IAAI,wCAKpBF,gBAAkB,WAGd,IAFA,IAAIG,EAAaR,EAAKJ,MAAMC,OACxBY,EAAmB,GAFHC,EAAA,SAGXC,GACL,IAAIC,EAAQJ,EAAWK,KAAKC,MAAMD,KAAKE,SAASP,EAAWQ,SAC3DR,EAAaA,EAAWS,OAAO,SAAAC,GAAK,OAAIA,EAAMhC,KAAO0B,EAAM1B,KAC3DuB,EAAiBN,KAAKS,IAHjBD,EAAE,EAAGA,EAAIX,EAAKJ,MAAMC,OAAOmB,OAAQL,IAAID,IAKhDV,EAAKI,SAAS,CAACP,OAAQY,6EAGvB,IAAAU,EAAAC,KAGJ,OAFAd,QAAQC,IAAIa,KAAKxB,MAAMC,QAGnBhB,EAAAC,EAAAC,cAACsC,EAAD,KACAxC,EAAAC,EAAAC,cAACuC,EAAD,CAAQ/B,MAAO6B,KAAKxB,MAAML,MAAOC,UAAW4B,KAAKxB,MAAMJ,YACnDX,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,cAChBoC,KAAKxB,MAAMC,OAAO0B,IAAI,SAAAL,GAAK,OACxBrC,EAAAC,EAAAC,cAACyC,EAAD,CAAMC,IAAMP,EAAMhC,GAAIA,GAAIgC,EAAMhC,GAAIE,IAAK8B,EAAMA,MAAO/B,QAASgC,EAAKpB,2BAhDtE2B,cCHlBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.73f81035.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => (\r\n    <button className = 'btn picture' data-id={props.id} onClick={() => props.onClick(props.id)}>\r\n        <img className='hero' src={props.src} alt={props.id}/>\r\n    </button>\r\n    )\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nconst NavBar = (props) => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n            <li className='nav-item'>\r\n                <span className=\"navbar-brand mb-0 h1\">OverWatch Clicky Game</span>\r\n            </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav ml-auto scoreBoard\">\r\n            <li className='nav-item'>\r\n                <span className='navbar-text my-sm-0'>Score: {props.score}</span>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <span className='navbar-text mr-sm-2'>High Score: {props.highScore}</span> \r\n            </li>\r\n\r\n        </ul>\r\n    </nav>\r\n)\r\n\r\nexport default NavBar;","import React from \"react\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from 'react';\r\nimport Card from './components/Card';\r\nimport images from './images.json';\r\nimport NavBar from './components/NavBar';\r\nimport Wrapper from './components/Wrapper';\r\nimport \"./App.css\"\r\n\r\nclass App extends Component {\r\n    state = {\r\n        images,\r\n        clickedImages: [], \r\n        score: 0, \r\n        highScore: 0\r\n    };\r\n\r\n    checkClicked = (id) => {\r\n        if(this.state.clickedImages.includes(id) === false){\r\n            let newImageArr = this.state.clickedImages;\r\n            newImageArr.push(id);\r\n            this.setState({\r\n                clickedImages: newImageArr,\r\n                score: this.state.score + 1\r\n            }, () => {\r\n                if(this.state.score > this.state.highScore){\r\n                    this.setState({highScore: this.state.score})\r\n                }\r\n            });\r\n            this.randomizeImages();\r\n        } else {\r\n            this.setState({clickedImages: [], images: images, score: 0})\r\n            console.log('you guessed incorrectly, you suck')\r\n        };\r\n        \r\n    }\r\n\r\n    randomizeImages = () => {\r\n        let imageArray = this.state.images;\r\n        let randomizedImages = [];\r\n        for (let i=0; i < this.state.images.length; i++){\r\n            let randy = imageArray[Math.floor(Math.random()*imageArray.length)];\r\n            imageArray = imageArray.filter(image => image.id !== randy.id);\r\n            randomizedImages.push(randy);\r\n        }\r\n        this.setState({images: randomizedImages})\r\n    }\r\n\r\nrender(){\r\n    console.log(this.state.images)\r\n    \r\n    return(\r\n        <Wrapper>\r\n        <NavBar score={this.state.score} highScore={this.state.highScore}/>\r\n            <div className = 'container'>\r\n                <div className = 'row images'>\r\n                {this.state.images.map(image => (\r\n                    <Card key ={image.id} id={image.id} src={image.image} onClick={this.checkClicked}/> ))}\r\n                </div>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n};\r\n   \r\n}\r\n   \r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}